@require "variables"
@require "typography"
@require "animation"

@import "jeet"


* {
    box-sizing border-box
}



html {
    overflow hidden

    -webkit-font-smoothing antialiased
    font-size basesize
}


html,
body {
    height 100vh
    margin 0
    padding 0

    background black
    color white
    font-family fontMontserrat
}


h1 {
    margin 0
    padding 0
    color white
    rem 50px
}

button {
    padding 10px 12px
    background black
    border 2px solid white
    color white
    cursor pointer
    rem 16px
    font-weight 400
    font-family fontMontserrat

    &:hover,
    &:focus {
        background white
        color black
        outline none
    }

    &[disabled] {
        cursor default
        opacity 0.5

        &:hover,
        &:focus {
            background black
            color white
        }
    }
}




// loading spinners
.loading {
    &.emoticon {
        position relative

        .leftEye,
        .rightEye {
            width 5vh
            height 5vh
            border-radius 50%
            background white
            position absolute
            top 50%
            left 50%
            transform translate(-50%, -50%)
            animation leftEyeAnimation 3s infinite cubic-bezier(0.455, 0.030, 0.515, 0.955)
        }

        .rightEye {
            animation rightEyeAnimation 3s infinite cubic-bezier(0.455, 0.030, 0.515, 0.955)
        }

        .mouth {
            width 10vh
            height 10vh
            border-radius 50%
            border solid 1.3vh rgba(255, 255, 255, 1)
            border-right solid 1.3vh rgba(255, 255, 255, 0)
            border-left solid 1.3vh rgba(255, 255, 255, 0)
            border-bottom solid 1.3vh rgba(255, 255, 255, 0)
            position absolute
            top 50%
            left 50%
            transform translate(-50%, -50%) rotate(360deg)
            animation mouthAnimation 3s infinite cubic-bezier(0.455, 0.030, 0.515, 0.955)
        }

        @keyframes mouthAnimation {
            0% {
                transform translate(-50%, -50%) rotateX(180deg)
            }
            10% {
                transform translate(-50%, -50%) rotateZ(360deg)
            }
            40% {
                transform translate(-50%, -50%) rotateZ(320deg)
            }
            60% {
                transform translate(-50%, -50%) rotateZ(900deg)
            }
            100% {
                transform translate(-50%, -50%) rotateZ(900deg)
            }
        }

        @keyframes leftEyeAnimation {
            0% {
                width 5vh
                height 5vh
                transform translate(-50%, -50%)
            }
            50% {
                width 5vh
                height 5vh
                transform translate(-50%, -50%)
            }
            60% {
                width 2vh
                height 2vh
                transform translate(-150%, -50%)
            }
            90% {
                width 2vh
                height 2vh
                transform translate(-150%, -50%)
            }
            100% {
                width 5vh
                height 5vh
                transform translate(-50%, -50%)
            }
        }

        @keyframes rightEyeAnimation {
            0% {
                width 5vh
                height 5vh
                transform translate(-50%, -50%)
            }
            50% {
                width 5vh
                height 5vh
                transform translate(-50%, -50%)
            }
            60% {
                width 2vh
                height 2vh
                transform translate(50%, -50%)
            }
            70% {
                width 2vh
                height 2vh
                transform translate(50%, -50%)
            }
            75% {
                width 2vh
                height 2px
                transform translate(50%, -50%)
            }
            80% {
                width 2vh
                height 2vh
                transform translate(50%, -50%)
            }
            90% {
                width 2vh
                height 2vh
                transform translate(50%, -50%)
            }
            100% {
                width 5vh
                height 5vh
                transform translate(-50%, -50%)
            }
        }
    }
}




html.admin,
html.mirror {
    [data-display] {
        display none
    }
}




layout {
    display block
    height 100%

    > div {
        display block
        height 100%
    }

    module {
        display block
    }


    //
    .row {
        center(100%)

        &.bottom {
            position absolute
            bottom 0
            left 0
            width 100%
        }

        .cell,
        .cell_left,
        .cell_right {
            box-sizing border-box

            // padding
            padding 20px

            / html.edgePadding_none & {
                padding 0
            }
            / html.edgePadding_small & {
                padding 10px
            }
            / html.edgePadding_medium & {
                padding 20px
            }
            / html.edgePadding_large & {
                padding 30px
            }
        }

        .cell_left {
            span(5/8)
        }
        .cell_right {
            span(3/8)
        }
    }


    // layouts
    &[data-layout="intro"] {
        position relative
        rem 26px

        aside,
        span.version {
            position fixed
            width 100%
            text-align center
        }

        aside {
            top 40px

            span {
                opacity 0.3
            }

            a {
                color white
                text-decoration none
                opacity 0.3

                / html.context_browser & {
                    border-bottom 2px solid white;

                    transition opacity 0.3s ease;

                    &:focus,
                    &:hover {
                        opacity 1
                    }
                }
            }
        }

        span.version {
            bottom 40px
            opacity 0.3
        }

        svg {
            position absolute
            width 100%

            +o(portrait) {
                top calc(50vh - 13vh)
                height 26vh

                +mq(phone) {
                    top calc(50vh - 18vh)
                    height 36vh
                }
            }

            +o(landscape) {
                top calc(50vh - 21vh)
                height 42vh

                +mq(phone) {
                    top calc(50vh - 26vh)
                    height 52vh
                }
            }

            text {
                fill url(#gr-radial)
                text-transform lowercase
                font-family fontBaumans
                font-size 11vw

                +mq(phone) {
                    font-size 18vw
                }
            }
        }
    }


    &[data-layout="bigclock"] {
        > div {
            module[type="datetime"] {
                center(
                    calc(100% - 100px)
                )
                align(b)

                display inline-block
                text-align center
                width 600px
                height 600px
            }
        }
    }
}




.animate {
    animation-duration 1s
    animation-fill-mode both

    &.infinite {
        animation-iteration-count infinite
    }

    &.hinge {
        animation-duration 2s
    }

    &.flipOutX,
    &.flipOutY,
    &.bounceIn,
    &.bounceOut {
        animation-duration 0.75s
    }


    &.bounceInOutVert {
        &.ng-enter {
            animation-name bounceInDown
            animation-timing-function ease-in
        }
        &.ng-leave {
            animation-name bounceOutUp
            animation-timing-function ease-out
        }
    }

    &.lightSpeedInOutHoriz {
        &.ng-enter {
            animation-name lightSpeedIn
            animation-timing-function ease-in
        }
        &.ng-leave {
            animation-name lightSpeedOut
            animation-timing-function ease-out
        }
    }

    &.flipInOutVert {
        &.ng-enter {
            animation-name flipInX
            animation-timing-function ease-in
            backface-visibility visible !important
        }
        &.ng-leave {
            animation-name flipOutX
            animation-timing-function ease-out
            backface-visibility visible !important
        }
    }

    &.fadeInOut {
        transition all 0.5s linear

        &.ng-enter {
            opacity 0

            &.ng-enter-active {
                opacity 1
            }
        }

        &.ng-leave {
            opacity 1

            &.ng-leave-active {
                opacity 0
            }
        }
    }
}